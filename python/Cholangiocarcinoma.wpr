#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(1,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files (x86)/Wing Personal 8/resources/typeshed/stdlib/3/builtins.pyi'),
                      'BlockingIOError')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/argparse.py'),
                      'Action')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                             '_warn_if_global_cmap_modified')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/lines.py'),
                      'drawStyles')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'axis')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_tensor.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_tensor.py'),
                      'Tensor')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/_utils.py'),
                      'annotate')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/functional.pyi'),
                      'adaptive_avg_pool1d')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'),
                             'Linear')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/linear.py'),
                      'Bilinear')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/loss.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/loss.py'),
                      'BCELoss')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'),
                             '_IncompatibleKeys')]],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'): {'expanded-nodes': [[('class def',
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'),
        'DataLoader')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/dataloader.py'),
                      'DataLoader')]},
        loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Local/Programs/Python/Python38/lib/site-packages/torch/utils/data/sampler.py'),
                      'BatchSampler')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../../learn/AutoEncoder/AutoEncoder.py'): {'expanded-nodes': [[('class def',
        loc('../../learn/AutoEncoder/AutoEncoder.py'),
        'Plot')]],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/AutoEncoder/AutoEncoder.py'),
                             'transform')]],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/AutoEncoder.py'),
                      'args')]},
        loc('../../learn/AutoEncoder/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/AutoEncoder/cancer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/cancer.py'),
                      'args')]},
        loc('../../learn/AutoEncoder/classify.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/classify.py'),
                      'args')]},
        loc('../../learn/AutoEncoder/extract.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/extract.py'),
                      'args')]},
        loc('../../learn/AutoEncoder/prepare.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/AutoEncoder/prepare.py'),
                             'validation')]],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/prepare.py'),
                      'args')]},
        loc('../../learn/AutoEncoder/train.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/train.py'),
                      'args')]},
        loc('../../learn/AutoEncoder/tune.py'): {'expanded-nodes': [[('class def',
        loc('../../learn/AutoEncoder/tune.py'),
        'Trainer')]],
        'selected-nodes': [[('class def',
                             loc('../../learn/AutoEncoder/tune.py'),
                             'Plotter')]],
        'top-node': [('generic attribute',
                      loc('../../learn/AutoEncoder/tune.py'),
                      'args')]},
        loc('../../learn/LeNet5.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../learn/LeNet5.py'),
        'accuracy')]},
        loc('../../learn/README.md'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('../../learn/ae.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../../learn/ae.py'),
        'args')]},
        loc('../../learn/bayes1.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../../learn/bayes1.py'),
        'alphas')]},
        loc('../../learn/cavi1.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../../learn/cavi1.py'),
        'args')]},
        loc('../../learn/cavi3.py'): {'expanded-nodes': [],
                                      'selected-nodes': [None],
                                      'top-node': None},
        loc('../../learn/em.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../../learn/em.py'),
        'args')]},
        loc('../../learn/fashion.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/fashion.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/fashion.py'),
                      'class_names')]},
        loc('../../learn/fcs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [None],
                                    'top-node': None},
        loc('../../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../learn/fcs/fcs.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/fcs.py'),
                      'args')]},
        loc('../../learn/fcs/gcps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/gcps.py'),
                      'a')]},
        loc('../../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/partition.py'),
                      'args')]},
        loc('../../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../../learn/flowers.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/flowers.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../learn/flowers.py'),
                      'args')]},
        loc('../../learn/gibbs.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../../learn/gibbs.py'),
        'a')]},
        loc('../../learn/hopfield.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../learn/hopfield.py'),
                      'dE')]},
        loc('../../learn/train.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('../../learn/train.py'),
        '_')]],
                                      'top-node': [('generic attribute',
        loc('../../learn/train.py'),
        'alpha')]},
        loc('../../learn/untitled-1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/untitled-1.py'),
                             'E')]],
        'top-node': [('generic attribute',
                      loc('../../learn/untitled-1.py'),
                      'ax')]},
        loc('../../learn/untitled-2.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../learn/untitled-2.py'),
                             'Z')]],
        'top-node': [('generic attribute',
                      loc('../../learn/untitled-2.py'),
                      'angle')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #4'),
        'parse_args')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #6'),
        'E')]},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('unknown:<untitled> #8'),
        'Z')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #9'),
        'angle')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'tick',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'product',
                                       'fReverse': True,
                                       'fSearchText': 'FIXME',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../learn/AutoEncoder/cancerEDA.py'),
        {'attrib-starts': [],
         'code-line': "    savefig('cancerEDA.png')\r\n",
         'first-line': 31,
         'folded-linenos': [],
         'sel-line': 57,
         'sel-line-start': 2198,
         'selection_end': 2225,
         'selection_start': 2225,
         'zoom': 0},
        1642964011.6600742],
        [loc('../../learn/AutoEncoder/cancer.py'),
         {'attrib-starts': [('CancerDataset|0|',
                             31),
                            ('CancerDataset|0|.__init__|0|',
                             36)],
          'code-line': "        self.df.drop(['cancer_type'],\r\n",
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 44,
          'sel-line-start': 1890,
          'selection_end': 2000,
          'selection_start': 1905,
          'zoom': 0},
         1642964013.833934],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [('read_and_split|0|',
                             20)],
          'code-line': '                     inplace = False)\r\n',
          'first-line': 14,
          'folded-linenos': [],
          'sel-line': 26,
          'sel-line-start': 1190,
          'selection_end': 1227,
          'selection_start': 1227,
          'zoom': 0},
         1642967606.6582017],
        [loc('../../learn/AutoEncoder/README.md'),
         {'attrib-starts': [],
          'code-line': '## Investigation of cholangiocarcinoma data\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 485,
          'selection_end': 523,
          'selection_start': 505,
          'zoom': 0},
         1642967615.432214],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    cholangiocarcinoma_distinct     = cholangiocarcinoma[cholangiocarcinoma.key in not_mutated.keys()]\r\n',
          'first-line': 37,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 2286,
          'selection_end': 2387,
          'selection_start': 2387,
          'zoom': 0},
         1642986056.9431915],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame|0|',
                             144),
                            ('NDFrame|0|.__getattr__|0|',
                             5445)],
          'code-line': '            return object.__getattribute__(self, name)\r\n',
          'first-line': 5436,
          'folded-linenos': [],
          'sel-line': 5461,
          'sel-line-start': 189827,
          'selection_end': 189827,
          'selection_start': 189827,
          'zoom': 0},
         1642986065.878338],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    cholangiocarcinoma_distinct     = cholangiocarcinoma[cholangiocarcinoma.id in not_mutated.keys()]\r\n',
          'first-line': 37,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 2286,
          'selection_end': 2364,
          'selection_start': 2364,
          'zoom': 0},
         1642986253.7119665],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame|0|',
                             144),
                            ('NDFrame|0|.__getattr__|0|',
                             5445)],
          'code-line': '            return object.__getattribute__(self, name)\r\n',
          'first-line': 5436,
          'folded-linenos': [],
          'sel-line': 5461,
          'sel-line-start': 189827,
          'selection_end': 189827,
          'selection_start': 189827,
          'zoom': 0},
         1642986261.6855636],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    cholangiocarcinoma_distinct     = cholangiocarcinoma[cholangiocarcinoma.index in not_mutated.keys()]\r\n',
          'first-line': 37,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 2286,
          'selection_end': 2367,
          'selection_start': 2367,
          'zoom': 0},
         1642986532.370861],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
         {'attrib-starts': [('Index|0|',
                             149),
                            ('Index|0|._maybe_cast_slice_bound|0|',
                             5310)],
          'code-line': '            raise self._invalid_indexer("slice", label)\r\n',
          'first-line': 5312,
          'folded-linenos': [],
          'sel-line': 5337,
          'sel-line-start': 178653,
          'selection_end': 178653,
          'selection_start': 178653,
          'zoom': 0},
         1642986534.4423523],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexes/base.py'),
         {'attrib-starts': [('Index|0|',
                             149),
                            ('Index|0|.__hash__|0|',
                             4271)],
          'code-line': '        raise TypeError(f"unhashable type: {repr(type(self).__name__)}")\r\n',
          'first-line': 4267,
          'folded-linenos': [],
          'sel-line': 4272,
          'sel-line-start': 143003,
          'selection_end': 143003,
          'selection_start': 143003,
          'zoom': 0},
         1642986548.215368],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    counts_other                    = other_cancer.sum(axis=0)\r\n',
          'first-line': 37,
          'folded-linenos': [],
          'sel-line': 42,
          'sel-line-start': 1786,
          'selection_end': 1848,
          'selection_start': 1848,
          'zoom': 0},
         1643007037.1121066],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    mutation_codes_sorted_by_counts_other_cancer = mutation_counts_other_cancer_descending.keys()\r\n',
          'first-line': 33,
          'folded-linenos': [],
          'sel-line': 45,
          'sel-line-start': 2069,
          'selection_end': 2159,
          'selection_start': 2120,
          'zoom': 0},
         1643046323.1867843],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '    heatmap(cholangiocarcinoma[mutation_counts_other_cancer_descending.tolist()],\r\n',
          'first-line': 35,
          'folded-linenos': [],
          'sel-line': 57,
          'sel-line-start': 2641,
          'selection_end': 2711,
          'selection_start': 2711,
          'zoom': 0},
         1643046395.1251495],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/indexing.py'),
         {'attrib-starts': [('_LocIndexer|0|',
                             917),
                            ('_LocIndexer|0|._validate_read_indexer|0|',
                             1268)],
          'code-line': '                raise KeyError(f"None of [{key}] are in the [{axis_name}]")\r\n',
          'first-line': 1282,
          'folded-linenos': [],
          'sel-line': 1307,
          'sel-line-start': 43261,
          'selection_end': 43261,
          'selection_start': 43261,
          'zoom': 0},
         1643046406.6397715],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [('read_and_split|0|',
                             20)],
          'code-line': '            extract(cancer_type=1))\r\n',
          'first-line': 10,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 1451,
          'selection_end': 1471,
          'selection_start': 1471,
          'zoom': 0},
         1643049127.3974228],
        [loc('../../learn/AutoEncoder/cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': '                        top    = 0.1,\r\n',
          'first-line': 58,
          'folded-linenos': [],
          'sel-line': 74,
          'sel-line-start': 3235,
          'selection_end': 3271,
          'selection_start': 3271,
          'zoom': 0},
         1643049475.7805796],
        [loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'),
         {'attrib-starts': [('SubplotParams|0|',
                             158),
                            ('SubplotParams|0|.update|0|',
                             193)],
          'code-line': "                raise ValueError('left cannot be >= right')\r\n",
          'first-line': 173,
          'folded-linenos': [],
          'sel-line': 201,
          'sel-line-start': 6746,
          'selection_end': 6746,
          'selection_start': 6746,
          'zoom': 0},
         1643049481.620996],
        [loc('../../../../Program Files (x86)/Wing Personal 8/doc/TOC'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       0],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1643053958.122537],
        [loc('cancerEDA.py'),
         {'attrib-starts': [],
          'code-line': "def read_and_split(path      = r'..\\Data_Files',\r\n",
          'first-line': 6,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 865,
          'selection_end': 900,
          'selection_start': 900,
          'zoom': 0},
         1643054224.905667]],
        20),
        'current-loc': loc('cancerEDA.py'),
        'editor-state-list': [(loc('cancerEDA.py'),
                               {'attrib-starts': [],
                                'code-line': '                        bottom = 0.05)\r\n',
                                'first-line': 63,
                                'folded-linenos': [],
                                'sel-line': 87,
                                'sel-line-start': 3577,
                                'selection_end': 3614,
                                'selection_start': 3614,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('cancerEDA.py')]),
                               'open_files': ['cancerEDA.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1643049475.5493705),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1643053951.7119048),
                 'user_data': {}},
        'window-alloc': (41,
                         0,
                         1536,
                         828)}]}
guimgr.recent-documents = [loc('cancerEDA.py')]
proj.pyexec = {None: ('custom',
                      'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
